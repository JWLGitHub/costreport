<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
                http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">


    <context:annotation-config />

    <!-- Component scan to find all Spring components -->
    <context:component-scan base-package="jwl.prp.retiree.costreport" />

    <!-- Import Application Context beans -->
    <context:property-placeholder location="classpath:application.properties" />


    <!-- Data source - connect to a MySQL instance running on the local machine -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${database.driver.class.name}"/>
        <property name="url"             value="${database.url}"/>
        <property name="username"        value="${database.user.name}"/>
        <property name="password"        value="${database.password}"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>


    <!-- Drop / Create Spring Batch job-meta tables automatically -->
    <!--
    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="org/springframework/batch/core/schema-drop-mysql.sql" />
        <jdbc:script location="org/springframework/batch/core/schema-mysql.sql" />
    </jdbc:initialize-database>
    -->


    <!-- Job Repository: used to persist the state of the batch job -->
    <!--
    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
        <property name="transactionManager" ref="transactionManager" />
    </bean>
    -->


    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource"         ref="dataSource" />
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <!-- Job Launcher: creates the job and the job state before launching it -->
    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>


    <!--                              -->
    <!--          DECIDER(s)          -->
    <!--                              -->


    <!--                              -->
    <!--          TASKLET(s)          -->
    <!--                              -->


    <!--                              -->
    <!--          READER(s)           -->
    <!--                              -->
    <bean id="cursorItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader" >
        <property name="dataSource" ref="dataSource" />

        <!--
        <property name="sql">
            <value>
                <![CDATA[
                    select *
                    from   retfilehist
                    where  status = '00'
                ]]>
            </value>
        </property>
        -->

        <property name="sql">
            <value>
                <![CDATA[
                    select *
                    from   retfilehist
                    where  status = ?
                ]]>
            </value>
        </property>
        <property name="preparedStatementSetter" >
            <bean class="jwl.prp.retiree.costreport.reader.jdbc.cursor.CursorPreparedStatementSetter">
            </bean>
        </property>

        <property name="rowMapper"  ref="retFileHistRowMapper"/>
        <property name="fetchSize"  value="3"/>
    </bean>


    <!--                            -->
    <!--        PROCESSER(s)        -->
    <!--                            -->
    <bean id="cursorItemProcessor" class="jwl.prp.retiree.costreport.processor.CursorItemProcessor" >
        <property name="applicationDAO"  ref="applicationDAO"/>
    </bean>


    <!--                         -->
    <!--        WRITER(s)        -->
    <!--                         -->
    <bean id="cursorItemWriter" class="jwl.prp.retiree.costreport.writer.CursorItemWriter">
        <property name="retFileHistDAO"  ref="retFileHistDAO"/>
    </bean>

    <!--                              -->
    <!--        ROW MAPPER(s)         -->
    <!--                              -->
    <bean id="retFileHistRowMapper" class="jwl.prp.retiree.costreport.dao.mapper.RetFileHistMapper"/>


    <!--                          -->
    <!--          DAO(s)          -->
    <!--                          -->
    <bean id="applicationDAO" class="jwl.prp.retiree.costreport.dao.ApplicationDAO">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>

    <bean id="retFileHistDAO" class="jwl.prp.retiree.costreport.dao.RetFileHistDAO">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>
</beans>