

CREATE TABLE ERR_CTG_REF
(
     ERR_CTGRY_CD     CHAR(2)          NOT NULL PRIMARY KEY,
     DESC_TXT         VARCHAR(255)     NOT NULL
);

INSERT INTO ERR_CTG_REF VALUES ('AE', "Application Error");
INSERT INTO ERR_CTG_REF VALUES ('FE', "File Error");



CREATE TABLE ERR_REF
(
     ERR_CTGRY_CD     CHAR(2)          NOT NULL,
     ERR_CD           CHAR(4)          NOT NULL,
     DESC_TXT         VARCHAR(255)     NOT NULL,
     PRIMARY KEY (ERR_CTGRY_CD, ERR_CD),
     FOREIGN KEY (ERR_CTGRY_CD) REFERENCES ERR_CTG_REF(ERR_CTGRY_CD)
);

INSERT INTO ERR_REF VALUES ('AE', '0000', "RX GROUP NUMBER (NOT AN ERROR)");
INSERT INTO ERR_REF VALUES ('AE', '0010', "INVALID APPLICATION ID ON AHDR");
INSERT INTO ERR_REF VALUES ('AE', '0020', "INVALID UBOI ON DETL");
INSERT INTO ERR_REF VALUES ('AE', '0030', "UNMATCHED APPLICATION ID IN ATRL");
INSERT INTO ERR_REF VALUES ('AE', '0040', "APPLICATION TRAILER RECORD COUNT ERROR");
INSERT INTO ERR_REF VALUES ('AE', '0050', "APPLICATION TRAILER RECORD COUNT NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('AE', '0060', "APPLICATION TRAILER PREMIUM AMOUNT INCORRECT");
INSERT INTO ERR_REF VALUES ('AE', '0070', "APPLICATION TRAILER PREMIUM AMOUNT NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('AE', '0080', "APPLICATION TRAILER RET COST INCORRECT");
INSERT INTO ERR_REF VALUES ('AE', '0090', "APPLICATION TRAILER RET COST NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('AE', '0100', "APPLICATION TRAILER THRESHOLD INCORRECT");
INSERT INTO ERR_REF VALUES ('AE', '0110', "APPLICATION TRAILER THRESHOLD NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('AE', '0120', "APPLICATION TRAILER LIMIT INCORRECT");
INSERT INTO ERR_REF VALUES ('AE', '0130', "APPLICATION TRAILER LIMIT NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('AE', '0140', "APPLICATION TRAILER COST ADJUST INCORRECT");
INSERT INTO ERR_REF VALUES ('AE', '0150', "APPLICATION TRAILER COST ADJUST NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('AE', '0160', "APPLICATION DETAIL DATE IS INVALID");
INSERT INTO ERR_REF VALUES ('AE', '0170', "APPLICATION DETAIL PREMIUM IS NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('AE', '0180', "APPLICATION DETAIL RET COST IS NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('AE', '0190', "APPLICATION DETAIL THRESHOLD IS NON_NUMERIC");
INSERT INTO ERR_REF VALUES ('AE', '0200', "APPLICATION DETAIL LIMIT IS NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('AE', '0210', "APPLICATION DETAIL COST ADJUST IS NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('AE', '0220', "DUPLICATE APPLICATION WITHIN A FILE");

INSERT INTO ERR_REF VALUES ('FE', '0010', "LIST RECORD CONTAINS INVALID DSN");
INSERT INTO ERR_REF VALUES ('FE', '0020', "LIST RECORD - PLAN SPONSOR DOES NOT EXIST");
INSERT INTO ERR_REF VALUES ('FE', '0030', "CRFILE ALLOCATION ERROR");
INSERT INTO ERR_REF VALUES ('FE', '0040', "CRFILE OPEN ERROR");
INSERT INTO ERR_REF VALUES ('FE', '0050', "CRFILE DSORG ERROR");
INSERT INTO ERR_REF VALUES ('FE', '0060', "CRFILE RECFM ERROR");
INSERT INTO ERR_REF VALUES ('FE', '0070', "CRFILE LRECL ERROR");
INSERT INTO ERR_REF VALUES ('FE', '0080', "CRFILE READ ERROR");
INSERT INTO ERR_REF VALUES ('FE', '0090', "CRFILE - BAD RECORD TYPE");
INSERT INTO ERR_REF VALUES ('FE', '0100', "CRFILE IS EMPTY");
INSERT INTO ERR_REF VALUES ('FE', '0110', "CRFILE CONTAINS NO APPLICATIONS");
INSERT INTO ERR_REF VALUES ('FE', '0120', "ALL APPLICATIONS REJECTED");
INSERT INTO ERR_REF VALUES ('FE', '0130', "FILE HEADER MISSING");
INSERT INTO ERR_REF VALUES ('FE', '0140', "FILE HEADER OUT OF SEQUENCE");
INSERT INTO ERR_REF VALUES ('FE', '0150', "FILE TRAILER OUT OF SEQUENCE");
INSERT INTO ERR_REF VALUES ('FE', '0160', "FILE TRAILER MISSING");
INSERT INTO ERR_REF VALUES ('FE', '0170', "APPLICATION HEADER OUT OF SEQUENCE");
INSERT INTO ERR_REF VALUES ('FE', '0180', "APPLICATION DETAIL RECORD OUT OF SEQUENCE");
INSERT INTO ERR_REF VALUES ('FE', '0190', "APPLICATION TRAILER RECORD OUT OF SEQUENCE");
INSERT INTO ERR_REF VALUES ('FE', '0200', "UNEXPECTED EOF. FILE SEQUENCE ERROR");
INSERT INTO ERR_REF VALUES ('FE', '0210', "FILE HEADER SUBMITTER TYPE DOES NOT MATCH DSN");
INSERT INTO ERR_REF VALUES ('FE', '0220', "FILE HEADER SUBMITTER ID MISSING");
INSERT INTO ERR_REF VALUES ('FE', '0230', "FILE HEADER SUBMITTER ID DOES NOT MATCH DSN");
INSERT INTO ERR_REF VALUES ('FE', '0240', "HEADER DATE IS INVALID DATE FORMAT");
INSERT INTO ERR_REF VALUES ('FE', '0250', "HEADER IS FUTURE DATED");
INSERT INTO ERR_REF VALUES ('FE', '0260', "HEADER DATE/TIME IS OUT OF SEQUENCE");
INSERT INTO ERR_REF VALUES ('FE', '0270', "FILE HEADER TIME IS INVALID");
INSERT INTO ERR_REF VALUES ('FE', '0280', "FILE TRAILER SUBMITTER IS INVALID");
INSERT INTO ERR_REF VALUES ('FE', '0290', "FILE TRAILER SUBMITTER ID DOES NOT MATCH HEADER");
INSERT INTO ERR_REF VALUES ('FE', '0300', "FILE TRAILER APPLICATION COUNT INCORRECT");
INSERT INTO ERR_REF VALUES ('FE', '0310', "FILE TRAILER APPLICATION COUNT NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('FE', '0320', "FILE TRAILER PREMIUM AMOUNT INCORRECT");
INSERT INTO ERR_REF VALUES ('FE', '0330', "FILE TRAILER PREMIUM AMOUNT NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('FE', '0340', "FILE TRAILER RET COST AMOUNT INCORRECT");
INSERT INTO ERR_REF VALUES ('FE', '0350', "FILE TRAILER RET COST AMOUNT NON-NUMERI");
INSERT INTO ERR_REF VALUES ('FE', '0360', "FILE TRAILER THRESHOLD AMOUNT INCORRECT");
INSERT INTO ERR_REF VALUES ('FE', '0370', "FILE TRAILER THRESHOLD AMOUNT NON-NUMER");
INSERT INTO ERR_REF VALUES ('FE', '0380', "FILE TRAILER LIMIT AMOUNT INCORRECT");
INSERT INTO ERR_REF VALUES ('FE', '0390', "FILE TRAILER LIMIT AMOUNT NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('FE', '0400', "FILE TRAILER COST ADJUST INCORRECT");
INSERT INTO ERR_REF VALUES ('FE', '0410', "FILE TRAILER COST ADJUST NON-NUMERIC");
INSERT INTO ERR_REF VALUES ('FE', '0420', "APPLICATION(S) DROPPED FROM FILE");
INSERT INTO ERR_REF VALUES ('FE', '0430', "NON_NUMERIC FIELD IN ATRL");
INSERT INTO ERR_REF VALUES ('FE', '0440', "CRFILE IS MISSING");



CREATE TABLE STUS_CTGRY
(
     STUS_CTGRY_CD    CHAR(2)          NOT NULL PRIMARY KEY,
     DESCRIPTION      VARCHAR(160)     NOT NULL
);

INSERT INTO STUS_CTGRY VALUES ('AS', "Application Status");
INSERT INTO STUS_CTGRY VALUES ('BN', "Beneficiary Status");
INSERT INTO STUS_CTGRY VALUES ('FS', "File Status");
INSERT INTO STUS_CTGRY VALUES ('OS', "Organization Status");



CREATE TABLE STUS_REF
(
     STUS_CTGRY_CD     CHAR(2)          NOT NULL,
     STUS_CD           CHAR(2)          NOT NULL,
     DESCRIPTION       VARCHAR(160)     NOT NULL,
     PRIMARY KEY (STUS_CTGRY_CD, STUS_CD),
     FOREIGN KEY (STUS_CTGRY_CD) REFERENCES STUS_CTGRY(STUS_CTGRY_CD)
);

INSERT INTO STUS_REF VALUES ('AS', 'AA', "Accepted");
INSERT INTO STUS_REF VALUES ('AS', 'AD', "Application deleted");
INSERT INTO STUS_REF VALUES ('AS', 'AF', "Rejected (File)");
INSERT INTO STUS_REF VALUES ('AS', 'AP', "Processing");
INSERT INTO STUS_REF VALUES ('AS', 'AR', "Rejected");
INSERT INTO STUS_REF VALUES ('BN', 'AC', "Active");
INSERT INTO STUS_REF VALUES ('BN', 'DL', "Deleted");
INSERT INTO STUS_REF VALUES ('BN', 'DM', "Bene Delete - Terminate Coverage");
INSERT INTO STUS_REF VALUES ('FS', 'CM', "File processing completed");
INSERT INTO STUS_REF VALUES ('FS', 'F-', "File deleted");
INSERT INTO STUS_REF VALUES ('FS', 'FA', "File accepted (no errors)");
INSERT INTO STUS_REF VALUES ('FS', 'FD', "File rejected - bad data");
INSERT INTO STUS_REF VALUES ('FS', 'FE', "File accepted with errors");
INSERT INTO STUS_REF VALUES ('FS', 'FI', "File missing");
INSERT INTO STUS_REF VALUES ('FS', 'FM', "File empty");
INSERT INTO STUS_REF VALUES ('FS', 'FP', "File processing - 1st pass");
INSERT INTO STUS_REF VALUES ('FS', 'FQ', "File processing - 2nd pass");
INSERT INTO STUS_REF VALUES ('FS', 'FR', "File rejected - bad structure");
INSERT INTO STUS_REF VALUES ('FS', 'FU', "All applications rejected");
INSERT INTO STUS_REF VALUES ('FS', 'FX', "File exists");
INSERT INTO STUS_REF VALUES ('FS', 'FZ', "No records in a file except for header and trailer");
INSERT INTO STUS_REF VALUES ('FS', 'NW', "New file");
INSERT INTO STUS_REF VALUES ('OS', 'DL', "Organization deleted");
INSERT INTO STUS_REF VALUES ('OS', 'NW', "New organization added");



CREATE TABLE RDS_FILE
(
     FILE_ID          INTEGER UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
     FILE_DIR_CD      CHAR(1)          NOT NULL,
     FILE_TYPE_CD     CHAR(2)          NOT NULL,
     FILE_DT_TM       DATETIME         NOT NULL,
     FILE_NAME        VARCHAR(54)      NOT NULL,
     FILE_DESC_TXT    VARCHAR(255)     NULL,
     SUBM_ORG_ID      CHAR(10)         NULL,
     ORG_TYP_CD       CHAR(1)          NOT NULL,
     ORG_ID           CHAR(10)         NOT NULL,
     STUS_CTGRY_CD    CHAR(2)          NOT NULL,
     STUS_CD          CHAR(2)          NOT NULL,
     STUS_TS          TIMESTAMP        NOT NULL,
     STUS_PGM         VARCHAR(30)      NOT NULL,
     UPTD_PGM         VARCHAR(30)      NULL,
     UPDT_TS          TIMESTAMP        NULL,
     PROCESS_DT       DATE             NOT NULL,
     RECEIPT_DT       DATE             NOT NULL,
     FOREIGN KEY (STUS_CTGRY_CD, STUS_CD) REFERENCES STUS_REF(STUS_CTGRY_CD, STUS_CD)
);



CREATE TABLE FILE_ERR
(
     FILE_ID          INTEGER UNSIGNED NOT NULL,
     ERR_CD           CHAR(4)          NOT NULL,
     ERR_CTGRY_CD     CHAR(2)          NOT NULL,
     ERR_SEQ_NUM      INTEGER UNSIGNED NOT NULL,
     ERR_INFO         VARCHAR(350)     NULL,
     PRIMARY KEY (FILE_ID, ERR_CD, ERR_CTGRY_CD, ERR_SEQ_NUM),
     FOREIGN KEY (FILE_ID) REFERENCES RDS_FILE(FILE_ID),
     FOREIGN KEY (ERR_CTGRY_CD, ERR_CD) REFERENCES ERR_REF(ERR_CTGRY_CD, ERR_CD)
);



CREATE TABLE FILE_APPL
(
     FILE_ID          INTEGER UNSIGNED NOT NULL,
     APPL_SEQ_NUM     INTEGER UNSIGNED NOT NULL,
     SUBM_APPL_ID     CHAR(10)         NOT NULL,
     PS_ID            CHAR(10)         NOT NULL,
     PSTG_PGM         VARCHAR(30)      NULL,
     PSTG_TS          TIMESTAMP        NULL,
     STUS_TS          TIMESTAMP        NOT NULL,
     STUS_PGM         VARCHAR(30)      NOT NULL,
     STUS_CTGRY_CD    CHAR(2)          NOT NULL,
     STUS_CD          CHAR(2)          NOT NULL,
     APPL_ID          CHAR(10)         NULL,
     PRIMARY KEY (FILE_ID, APPL_SEQ_NUM),
     FOREIGN KEY (FILE_ID) REFERENCES RDS_FILE(FILE_ID),
     FOREIGN KEY (STUS_CTGRY_CD, STUS_CD) REFERENCES STUS_REF(STUS_CTGRY_CD, STUS_CD),
     FOREIGN KEY (APPL_ID) REFERENCES APPLICATION(APPLICATION_ID)
);



CREATE TABLE APPL_ERR
(
     FILE_ID          INTEGER UNSIGNED NOT NULL,
     APPL_SEQ_NUM     INTEGER UNSIGNED NOT NULL,
     ERR_CTGRY_CD     CHAR(2)          NOT NULL,
     ERR_CD           CHAR(4)          NOT NULL,
     ERR_SEQ_NUM      INTEGER UNSIGNED NOT NULL,
     COST_YEAR_NUM    CHAR(4)          NULL,
     COST_MNTH_NUM    CHAR(2)          NULL,
     RX_GRP_NUM       CHAR(20)         NULL,
     ERR_INFO         VARCHAR(350)     NULL,
     PRIMARY KEY (FILE_ID, APPL_SEQ_NUM, ERR_CTGRY_CD, ERR_CD, ERR_SEQ_NUM),
     FOREIGN KEY (FILE_ID, APPL_SEQ_NUM) REFERENCES FILE_APPL(FILE_ID, APPL_SEQ_NUM),
     FOREIGN KEY (ERR_CTGRY_CD, ERR_CD)  REFERENCES ERR_REF(ERR_CTGRY_CD, ERR_CD)
);



CREATE TABLE APPLICATION
(
     APPLICATION_ID     CHAR(10)          NOT NULL PRIMARY KEY
);

INSERT INTO APPLICATION VALUES ('0000000001');
INSERT INTO APPLICATION VALUES ('0123456789');
INSERT INTO APPLICATION VALUES ('1111111111');
INSERT INTO APPLICATION VALUES ('9876543210');
INSERT INTO APPLICATION VALUES ('9999999999');



CREATE TABLE PLANOPTIONS
(
     APPLICATION_ID     CHAR(10)          NOT NULL,
     GROUP_NUMBER       CHAR(20)          NOT NULL,
     PRIMARY KEY (APPLICATION_ID, GROUP_NUMBER),
     FOREIGN KEY (APPLICATION_ID) REFERENCES APPLICATION(APPLICATION_ID)
);

INSERT INTO PLANOPTIONS VALUES ('0000000001', 'AAAAAAAAAABBBBBBBBBB');
INSERT INTO PLANOPTIONS VALUES ('0000000001', 'ZZZZZZZZZZZZZZZZZZZZ');
INSERT INTO PLANOPTIONS VALUES ('1111111111', 'XXXXXXXXXXXXXXXXXXXX');
INSERT INTO PLANOPTIONS VALUES ('0123456789', '11111111112222222222');



CREATE TABLE COST_REPORT_IMPORT
(
     FILE_ID          INTEGER UNSIGNED NOT NULL,
     FILE_DT_TM       DATETIME         NOT NULL,
     RECORD_CONTENTS  CHAR(110)        NOT NULL,
     FOREIGN KEY (FILE_ID) REFERENCES RDS_FILE(FILE_ID)
);